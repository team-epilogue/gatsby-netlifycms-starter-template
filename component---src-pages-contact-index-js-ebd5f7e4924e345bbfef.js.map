{"version":3,"sources":["webpack:///./src/pages/contact/index.js"],"names":["Index","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","data","form","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","className","style","width","margin","action","data-netlify","data-netlify-honeypot","onSubmit","this","type","hidden","onChange","htmlFor","id","required","React","Component"],"mappings":"4MAUqBA,E,YACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAA1C,KANiB,EASnBC,aAAe,SAACL,GACdA,EAAEM,iBACF,IAlBYC,EAkBNC,EAAOR,EAAEE,OACfO,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MAtBUL,EAsBG,OAAD,QACV,YAAaC,EAAKK,aAAa,SAC5B,EAAKC,OAvBPC,OAAOC,KAAKT,GAChBU,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBZ,EAAKW,OACrEE,KAAK,QAwBHC,MAAK,kBAAMC,mBAASd,EAAKK,aAAa,cACtCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAnB1B,EAAKV,MAAQ,CAAEY,aAAa,GAFX,E,oCAwBnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UAAUC,MAAO,CAACC,MAAO,OAAQC,OAAQ,aACtD,uCACA,0BACE5B,KAAK,UACLO,OAAO,OACPsB,OAAO,mBACPC,eAAa,OACbC,wBAAsB,YACtBC,SAAUC,KAAK/B,cAGf,2BAAOgC,KAAK,SAASlC,KAAK,YAAYC,MAAM,YAC5C,yBAAKkC,QAAM,GACT,sDACuB,IACrB,2BAAOnC,KAAK,YAAYoC,SAAUH,KAAKrC,iBAG3C,yBAAK6B,UAAU,SACb,2BAAOA,UAAU,QAAQY,QAAS,QAAlC,aAGA,yBAAKZ,UAAU,WACb,2BACEA,UAAU,QACVS,KAAM,OACNlC,KAAM,OACNoC,SAAUH,KAAKrC,aACf0C,GAAI,OACJC,UAAU,MAIhB,yBAAKd,UAAU,SACb,2BAAOA,UAAU,QAAQY,QAAS,SAAlC,SAGA,yBAAKZ,UAAU,WACb,2BACEA,UAAU,QACVS,KAAM,QACNlC,KAAM,QACNoC,SAAUH,KAAKrC,aACf0C,GAAI,QACJC,UAAU,MAIhB,yBAAKd,UAAU,SACb,2BAAOA,UAAU,QAAQY,QAAS,WAAlC,WAGA,yBAAKZ,UAAU,WACb,8BACEA,UAAU,WACVzB,KAAM,UACNoC,SAAUH,KAAKrC,aACf0C,GAAI,UACJC,UAAU,MAIhB,yBAAKd,UAAU,SACb,4BAAQA,UAAU,iBAAiBS,KAAK,UAAxC,e,GA7FiBM,IAAMC","file":"component---src-pages-contact-index-js-ebd5f7e4924e345bbfef.js","sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby-link'\nimport Layout from '../../components/Layout'\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { isValidated: false }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch((error) => alert(error))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\" style={{width: '60vw', margin: '1em auto'}}>\n              <h1>Contact</h1>\n              <form\n                name=\"contact\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n                <div hidden>\n                  <label>\n                    Donâ€™t fill this out:{' '}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'name'}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={'text'}\n                      name={'name'}\n                      onChange={this.handleChange}\n                      id={'name'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'email'}>\n                    Email\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={'email'}\n                      name={'email'}\n                      onChange={this.handleChange}\n                      id={'email'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'message'}>\n                    Message\n                  </label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea\"\n                      name={'message'}\n                      onChange={this.handleChange}\n                      id={'message'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}