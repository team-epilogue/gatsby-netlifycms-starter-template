{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","BlogPostTemplate","image","content","contentComponent","description","tags","date","title","helmet","PostContent","Content","PostImage","undefined","childImageSharp","fluid","src","console","log","scrollToBlog","className","style","width","alt","fontFamily","color","fontWeight","fontSize","length","marginTop","map","tag","key","to","kebabCase","window","scrollTo","top","behavior","BlogPost","post","data","markdownRemark","html","frontmatter","featuredimage","HTMLContent","titleTemplate","name","pageQuery"],"mappings":"6EAAAA,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,kCCpBR,uLAQaY,EAAmB,SAAC,GAS1B,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,YACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,OAEMC,EAAcN,GAAoBO,IACpCC,EAAY,KAOhB,YANaC,IAAVX,IAEDU,EAAYV,EAAMY,gBAAgBC,MAAMC,IACxCC,QAAQC,IAAIN,IAEdO,IAEE,iCACGV,GAAU,GACX,yBAAKW,UAAU,WACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,wBAGb,yBAAKJ,IAAKJ,EAAWQ,UAAU,uBAAuBC,MAAO,CAACC,MAAM,SAAUC,IAAI,mLAElF,yBAAKH,UAAU,iBACf,wBACIC,MAAO,CAACG,WAAW,sBAAuBC,MAAM,OAAQC,WAAW,MAAOC,SAAU,WACrFnB,GAEH,uBAAGY,UAAU,uBAAuBf,GAEpC,uBAAGe,UAAU,qBAAb,aAA2C,0BAAMA,UAAU,kBAAhB,oBAA3C,OAAuG,0BAAMA,UAAU,gBAAgBb,GAAvI,MAEA,yBAAKa,UAAU,SAEf,yBAAKA,UAAU,6BACb,kBAACV,EAAD,CAAaU,UAAU,kBAAkBjB,QAASA,IAEjDG,GAAQA,EAAKsB,OACZ,yBAAKP,MAAO,CAAEQ,UAAU,SACtB,oCACA,wBAAIT,UAAU,WACXd,EAAKwB,KAAI,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAAG,MAAUX,UAAU,UAChC,kBAAC,IAAD,CAAMA,UAAU,MAAMa,GAAE,SAAWC,oBAAUH,GAArB,KAA+BA,SAK3D,YAWZZ,EAAe,WACE,oBAAXgB,QAERA,OAAOC,SAAS,CAACC,IAAI,IAAKC,SAAS,YA8CxBC,UAhCE,SAAC,GAAc,IACNC,EADK,EAAXC,KACVC,eACR,OACE,kBAAC,IAAD,KACE,kBAACzC,EAAD,CACEE,QAASqC,EAAKG,KACdzC,MAAOsC,EAAKI,YAAYC,cACxBzC,iBAAkB0C,IAClBvC,KAAMiC,EAAKI,YAAYrC,KACvBF,YAAamC,EAAKI,YAAYvC,YAC9BI,OACE,kBAAC,IAAD,CAAQsC,cAAc,aACpB,kCAAWP,EAAKI,YAAYpC,OAC5B,0BACEwC,KAAK,cACL7C,QAAO,GAAKqC,EAAKI,YAAYvC,eAInCC,KAAMkC,EAAKI,YAAYtC,KACvBE,MAAOgC,EAAKI,YAAYpC,UAczB,IAAMyC,EAAS","file":"component---src-templates-blog-post-js-5b8ce9c1d52a3f599333.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { kebabCase } from 'lodash'\nimport { Helmet } from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const BlogPostTemplate = ({\n  image,\n  content,\n  contentComponent,\n  description,\n  tags,\n  date,\n  title,\n  helmet,\n}) => {\n  const PostContent = contentComponent || Content\n  let PostImage = null;\n  if(image !== undefined)\n  {\n    PostImage = image.childImageSharp.fluid.src\n    console.log(PostImage);\n  }\n  scrollToBlog()\n  return (\n    <section>\n      {helmet || ''}\n      <div className=\"content\">\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-col-around\"\n              >\n                \n            <img src={PostImage} className=\"blogPostFeatureImage\" style={{width:'100vw'}} alt=\"NOTE: The FeaturedImage and publishedDate have been disabled in preview mode as their implementation will change in the upcoming builds and are in unfinished state as of now.\"></img>\n\n            <div className=\"blogContainer\" >\n            <h1\n                style={{fontFamily:'Poppins, sans-serif', color:'#000', fontWeight:'700', fontSize: '2.8rem' }}>\n              {title}\n            </h1>\n            <p className=\"blogPostDescription\">{description}</p>\n            \n            <p className=\"blogPostedDetails\">Posted by <span className=\"blogPostAuthor\">Simar Mann Singh</span> on <span className=\"blogPostDate\">{date}</span>  </p>\n\n            <div className=\"line\"></div>\n\n            <div className=\"blogPostContentsContainer\">\n              <PostContent className=\"blogPostContent\" content={content} />\n              \n              {tags && tags.length ? (\n                <div style={{ marginTop: `4rem` }}>\n                  <h4>Tags</h4>\n                  <ul className=\"taglist\">\n                    {tags.map((tag) => (\n                      <li key={tag + `tag`} className=\"center\" >\n                      <Link className=\"tag\" to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n}\n\nconst scrollToBlog = () => {  \n  if(typeof window !== 'undefined')\n  {\n    window.scrollTo({top:400, behavior:\"smooth\"})\n  }\n}\n\nBlogPostTemplate.propTypes = {  \n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  content: PropTypes.node.isRequired,\n  date : PropTypes.string,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.object,\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data    \n  return (\n    <Layout>\n      <BlogPostTemplate\n        content={post.html}\n        image={post.frontmatter.featuredimage}\n        contentComponent={HTMLContent}\n        date={post.frontmatter.date}\n        description={post.frontmatter.description}\n        helmet={\n          <Helmet titleTemplate=\"%s | Blog\">\n            <title>{`${post.frontmatter.title}`}</title>\n            <meta\n              name=\"description\"\n              content={`${post.frontmatter.description}`}\n            />\n          </Helmet>\n        }\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"DD MMM, YYYY\")\n        title\n        description\n        featuredimage{\n          childImageSharp {\n            fluid(maxWidth: 1280, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n            id : id\n          }\n        }\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}